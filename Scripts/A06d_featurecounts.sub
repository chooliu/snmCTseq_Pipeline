
#!/bin/bash
#$ -cwd
#$ -o sublogs/A06d_featurecounts.$JOB_ID.$TASK_ID
#$ -j y
#$ -l h_rt=3:00:00,h_data=24G
#$ -N A06d_featurecounts
#$ -t 1-32
#$ -hold_jid A06b_starfilt



echo "Job $JOB_ID.$SGE_TASK_ID started on:   " `hostname -s`
echo "Job $JOB_ID.$SGE_TASK_ID started on:   " `date `
echo " "





# environment init -------------------------------------------------------------

. /u/local/Modules/default/init/modules.sh # <--
module load anaconda3 # <--
conda activate snmCTseq # <--

export $(cat snmCT_parameters.env | grep -v '^#' | xargs) # <--

dir_out_gene=featurecounts_gene/ # <-- 
dir_out_exon=featurecounts_exon/ # <--

quantify_exons="true" # <-- (typically we analyze combined exon+intron)



# extract target filepaths -----------------------------------------------------

# helper functions
query_metadat () {
  awk -F',' -v targetcol="$1" \
      'NR==1 {
                for (i=1;i<=NF;i++) {
                    if ($i==targetcol) {assayout=i; break} }
                print $assayout
              }
      NR>1 {f
                print $assayout
            }' ${metadat_well}
}

# extract target wells, print values for log

platenum=($(query_metadat "platenum"))
nwells=${#platenum[@]}

target_well_rows=()
for ((row=1; row<=nwells; row++))
do
    if [[ "${platenum[$row]}" == "${SGE_TASK_ID}" ]]
    then
        target_well_rows+=($row)
    fi
done



# filepaths associated with target rows in well-level metadata -----------------

wellprefix=($(query_metadat "wellprefix"))
dir_well=($(query_metadat "A06a_dir_star"))

bam_pe=($(query_metadat "A06b_bam_starfilt_PE"))
bam_se1=($(query_metadat "A06b_bam_starfilt_SE1"))
bam_se2=($(query_metadat "A06b_bam_starfilt_SE2"))



# extract valid .bam filepaths -------------------------------------------------

# checks only if the .bam exists (otherwise featureCounts may terminate with error)
# could also wrap in check that number of alignments in file is > 0
# for greater future compatibility with featureCounts

pe_files=$(
for file in ${bam_pe[@]: ${target_well_rows[0] }:${#target_well_rows[@] } }
do
    if [[ -s ${file} ]]
    then
        echo ${file}
    fi
done)

se1_files=$(
for file in ${bam_se1[@]: ${target_well_rows[0] }:${#target_well_rows[@] } }
do
    if [[ -s ${file} ]]
    then
        echo ${file}
    fi
done)

se2_files=$(
for file in ${bam_se2[@]: ${target_well_rows[0] }:${#target_well_rows[@] } }
do
    if [[ -s ${file} ]]
    then
        echo ${file}
    fi
done)



# featurecounts on genes -------------------------------------------------------
# usually <1 min/well --> <1 hr/plate

if [[ ! -s ${dir_out_gene} ]]
then
    mkdir ${dir_out_gene}
fi

echo "running gene featureCounts on paired-end alignments (mapping_star/*/PE.Final.bam)."
featureCounts -p -T 4 -t gene -a ${ref_gtf} \
    -o ${dir_out_gene}/PE_${SGE_TASK_ID} --donotsort --tmpDir ${dir_scratch} ${pe_files}

echo "running gene featureCounts on single-end R1 alignments (mapping_star/*/SE1.Final.bam)."
featureCounts -T 4 -t gene -a ${ref_gtf} \
    -o ${dir_out_gene}/SE1_${SGE_TASK_ID} --donotsort --tmpDir ${dir_scratch} ${se1_files}

echo "running gene featureCounts on single-end R2 alignments (mapping_star/*/SE2.Final.bam)."
featureCounts -T 4 -t gene -a ${ref_gtf} \
    -o ${dir_out_gene}/SE2_${SGE_TASK_ID} --donotsort --tmpDir ${dir_scratch} ${se2_files}



# featurecounts on exons -------------------------------------------------------
# usually <1 min/well --> <1 hr/plate

if [[ ${quantify_exons} == "true" ]]
then

    if [[ ! -s ${dir_out_exon} ]]
    then
        mkdir ${dir_out_exon}
    fi

    echo "running exon featureCounts on paired-end alignments (mapping_star/*/PE.Final.bam)."
    featureCounts -p -T 4 -t exon -a ${ref_gtf} \
        -o ${dir_out_exon}/PE_${SGE_TASK_ID} --donotsort --tmpDir ${dir_scratch} ${pe_files}

    echo "running exon featureCounts on single-end R1 alignments (mapping_star/*/SE1.Final.bam)."
    featureCounts -T 4 -t exon -a ${ref_gtf} \
        -o ${dir_out_exon}/SE1_${SGE_TASK_ID} --donotsort --tmpDir ${dir_scratch} ${se1_files}

    echo "running exon featureCounts on single-end R2 alignments (mapping_star/*/SE2.Final.bam)."
    featureCounts -T 4 -t exon -a ${ref_gtf} \
        -o ${dir_out_exon}/SE2_${SGE_TASK_ID} --donotsort --tmpDir ${dir_scratch} ${se2_files}

fi





echo -e "\n\n'A06d_featurecounts' completed.\n\n"



echo "Job $JOB_ID.$SGE_TASK_ID ended on:   " `hostname -s`
echo "Job $JOB_ID.$SGE_TASK_ID ended on:   " `date `
echo " "

